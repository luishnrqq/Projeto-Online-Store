{"ast":null,"code":"var _jsxFileName = \"/home/lois/Documentos/Luis_projects/Online-store/src/components/SearchProducts.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Product from './Product';\nimport style from './SearchProducts.module.css';\n\nclass SearchProducts extends React.Component {\n  constructor() {\n    super();\n\n    this.UpdadeID = () => {\n      const {\n        CategoryId\n      } = this.props;\n      this.setState({\n        id: CategoryId\n      }, () => this.showProduct());\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.showProduct = this.showProduct.bind(this);\n    this.state = {\n      responseAPI: [],\n      searchInput: '',\n      id: ''\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      CategoryId\n    } = this.props;\n    const {\n      id\n    } = this.state;\n\n    if (id !== CategoryId) {\n      this.UpdadeID();\n    }\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    this.setState({\n      searchInput: target.value\n    });\n  }\n\n  showProduct() {\n    const {\n      id,\n      searchInput\n    } = this.state;\n    getProductsFromCategoryAndQuery(id, searchInput).then(response => {\n      this.setState({\n        responseAPI: [...response.results]\n      });\n    });\n  }\n\n  render() {\n    const {\n      responseAPI,\n      searchInput\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: style.searchProducts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"text-input\",\n      \"data-testid\": \"query-input\",\n      type: \"text\",\n      value: searchInput,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: this.showProduct,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Pesquisar\"), responseAPI.map(product => /*#__PURE__*/React.createElement(Product, {\n      key: product.id,\n      product: product,\n      \"data-testid\": \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nSearchProducts.propTypes = {\n  CategoryId: PropTypes.string.isRequired\n};\nexport default SearchProducts;","map":{"version":3,"sources":["/home/lois/Documentos/Luis_projects/Online-store/src/components/SearchProducts.jsx"],"names":["React","PropTypes","getProductsFromCategoryAndQuery","Product","style","SearchProducts","Component","constructor","UpdadeID","CategoryId","props","setState","id","showProduct","handleChange","bind","state","responseAPI","searchInput","componentDidUpdate","target","value","then","response","results","render","searchProducts","map","product","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Product from './Product';\nimport style from './SearchProducts.module.css';\n\nclass SearchProducts extends React.Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.showProduct = this.showProduct.bind(this);\n\n    this.state = {\n      responseAPI: [],\n      searchInput: '',\n      id: '',\n    };\n  }\n\n  componentDidUpdate() {\n    const { CategoryId } = this.props;\n    const { id } = this.state;\n\n    if (id !== CategoryId) {\n      this.UpdadeID();\n    }\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      searchInput: target.value,\n    });\n  }\n\n  UpdadeID = () => {\n    const { CategoryId } = this.props;\n    this.setState({\n      id: CategoryId,\n    }, () => this.showProduct());\n  }\n\n  showProduct() {\n    const { id, searchInput } = this.state;\n\n    getProductsFromCategoryAndQuery(id, searchInput).then((response) => {\n      this.setState({\n        responseAPI: [...response.results],\n      });\n    });\n  }\n\n  render() {\n    const { responseAPI, searchInput } = this.state;\n    return (\n      <section className={ style.searchProducts }>\n        <label htmlFor=\"text-input\">\n          <input\n            id=\"text-input\"\n            data-testid=\"query-input\"\n            type=\"text\"\n            value={ searchInput }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <button type=\"button\" data-testid=\"query-button\" onClick={ this.showProduct }>\n          Pesquisar\n        </button>\n        {responseAPI.map((product) => (\n          <Product key={ product.id } product={ product } data-testid=\"product\" />\n        ))}\n      </section>\n    );\n  }\n}\n\nSearchProducts.propTypes = {\n  CategoryId: PropTypes.string.isRequired,\n};\n\nexport default SearchProducts;\n"]},"metadata":{},"sourceType":"module"}